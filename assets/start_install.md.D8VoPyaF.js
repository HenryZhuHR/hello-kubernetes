import{_ as s,c as a,o as i,a3 as e}from"./chunks/framework.7kCWGuEV.js";const b=JSON.parse('{"title":"环境准备","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"start/install.md","filePath":"start/install.md"}'),n={name:"start/install.md"},t=e(`<h1 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h1><h2 id="docker-安装" tabindex="-1">docker 安装 <a class="header-anchor" href="#docker-安装" aria-label="Permalink to &quot;docker 安装&quot;">​</a></h2><h2 id="minikube-安装" tabindex="-1">minikube 安装 <a class="header-anchor" href="#minikube-安装" aria-label="Permalink to &quot;minikube 安装&quot;">​</a></h2><p>安装 <a href="https://minikube.sigs.k8s.io/docs/" target="_blank" rel="noreferrer">minikube</a></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-8Oyxu" id="tab-5MOjAjH" checked><label for="tab-5MOjAjH">MacOS</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minikube</span></span></code></pre></div></div></div><p>使用以下命令启动 minikube ：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 😄  Darwin 15.0 (arm64) 上的 minikube v1.33.1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ✨  根据现有的配置文件使用 docker 驱动程序</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 👍  Starting &quot;minikube&quot; primary control-plane node in &quot;minikube&quot; cluster</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 🚜  Pulling base image v0.0.44 ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 🔄  Restarting existing docker container for &quot;minikube&quot; ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 🐳  正在 Docker 26.1.1 中准备 Kubernetes v1.30.0…</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 🔎  正在验证 Kubernetes 组件...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#     ▪ 正在使用镜像 gcr.io/k8s-minikube/storage-provisioner:v5</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 🌟  启用插件： storage-provisioner, default-storageclass</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 🏄  完成！kubectl 现在已配置，默认使用&quot;minikube&quot;集群和&quot;default&quot;命名空间</span></span></code></pre></div><h2 id="kubectl-安装" tabindex="-1">kubectl 安装 <a class="header-anchor" href="#kubectl-安装" aria-label="Permalink to &quot;kubectl 安装&quot;">​</a></h2><p>每次使用 <code>kubectl</code> 前确保 <code>minikube</code> 已经启动如果没有启动，使用命令查看集群状态</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cluster-info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Kubernetes control plane is running at https://127.0.0.1:52187</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CoreDNS is running at https://127.0.0.1:52187/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span></span></code></pre></div><p>如果产生报错，则可能是集群没有启动，可以</p><p>随后执行上面的命令查看集群状态，如果集群状态正常，则可以使用 <code>kubectl</code> 命令进行操作。</p><h2 id="注册-docker-hub-账号登录" tabindex="-1">注册 docker hub 账号登录 <a class="header-anchor" href="#注册-docker-hub-账号登录" aria-label="Permalink to &quot;注册 docker hub 账号登录&quot;">​</a></h2>`,13),l=[t];function p(h,r,o,k,c,d){return i(),a("div",null,l)}const g=s(n,[["render",p]]);export{b as __pageData,g as default};
